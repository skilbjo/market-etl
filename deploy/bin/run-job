#!/usr/bin/env bash
set -eou pipefail

dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )/../../" && pwd )" && cd "$dir"
app="$(basename $(pwd))"
tmp_dir='/tmp'
pull_new_image=''

usage(){ echo "Usage: ${0} [<--pull-new-image>]" 1>&2; exit 1; }
arg_arr=("$@")
for i in "${!arg_arr[@]}"; do
  if [[ ${arg_arr[$i]} == '--pull-new-image' ]]; then
    pull_new_image='y'
    set -- "${@:1:${i}-1+1}" "${@:${i}+1+1}" # remove --pull-new-image from args list
  fi
done

update_crond(){
  sudo bash -c "cat ${dir}/deploy/tasks/crontab >/etc/cron.d/${app}"

  case "$(uname)" in
    ('FreeBSD') sudo sed -i '' $'1i\\\n SHELL="/usr/local/bin/bash"\n' "/etc/cron.d/${app}"
                sudo sed -i '' $'1i\\\n cmd="deploy/bin/run-job"\n'    "/etc/cron.d/${app}" ;;
  esac
}

get_artifact_from_circle_ci(){
  local url="https://circleci.com/api/v1.1/project/github/skilbjo/${app}"
  local last_build_num="$(curl "${url}/tree/master?circle-token=${circleci_markets_api_key}" | \
    jq -r '.[0].build_num')"
  local artifact_url="$(curl "${url}/${last_build_num}/artifacts?circle-token=${circleci_markets_api_key}" | \
    jq -r '.[0].url')"

  curl -L "$artifact_url" >"${tmp_dir}/${app}.jar"  # w/o -L you get: "Redirecting to..."
}

case "$(whoami)" in   # Prereqs
  root ) mv /app.jar "${tmp_dir}/${app}.jar" ;;
esac

case "$(uname -m)" in # Prereqs
  arm* )
    deploy_dir='/usr/local/deploy/bin'
    set +e; eval "${deploy_dir}/apk-arm"; update-ca-certificates; apk fix || echo 'Unable to reach apk...'; set -e; # set +e when apk not available
    mv /app.jar "${tmp_dir}/${app}.jar" ;;
esac

case "$(uname)" in
  FreeBSD | Darwin )
    if [[ $(uname) == 'FreeBSD' ]]; then
      # any scripts need updating?
      git pull -f && \
        update_crond
    fi

    if [[ -n $pull_new_image ]]; then
      if [[ -f ${tmp_dir}/${app}.jar ]]; then rm "${tmp_dir}/${app}.jar"; fi
      get_artifact_from_circle_ci
    fi

    JAVA_OPTS="-Duser.timezone=UTC -Xms256m -Xmx512m -XX:MaxMetaspaceSize=128m" ;;
  Linux )
    if [[ $@ == backfill-* ]]; then
      # call like /usr/local/deploy/bin/run-job backfill-equities
      _job=$(echo "$@" | sed 's/backfill-//')

      eval "/usr/local/backfill/job ${_job}"
    fi ;;
esac

cmd="java $JAVA_OPTS -jar ${tmp_dir}/${app}.jar"
eval "$cmd" $@
