#!/usr/bin/env bash
set -eou pipefail

dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )/../../" && pwd )" && cd "$dir"
app="$(basename $(pwd))"
arch=''

case "$(uname -m)" in
  amd64* | x_86* | x86_64* )
    img="quay.io/skilbjo/${app}:latest" ;;
  arm* )
    arch='arm'
    img="quay.io/skilbjo/${app}:${arch}" ;;
esac

job_cmd='/usr/local/deploy/bin/run-job'

get_current_artifacts(){
  # any scripts need updating?
  git pull -f

  # remove all app containers
  set +e
  ## below not needed as the docker run cmd has the --rm flag
  #docker ps -a | grep "$app" | awk '{print $1}' | uniq | xargs docker rm -f

  # remove all app images
  docker images | grep "$app" | awk '{print $3}' | uniq | xargs docker rmi -f
  set -e
}

update_crond(){
  case "$(uname)" in
    ('Linux') sed -i '1i SHELL=/usr/bin/bash'         "${dir}/deploy/tasks/crontab"
              sed -i '1i cmd="deploy/bin/run-docker"' "${dir}/deploy/tasks/crontab" ;;
  esac
  sudo cp "${dir}/deploy/tasks/crontab" "/etc/cron.d/${app}"
}

get_current_artifacts && \
  update_crond

docker run --rm \
  --name="$(echo $app $@ | tr ' ' '_')" \
  -e jdbc_db_uri="$(echo $jdbc_db_uri)" \
  -e quandl_api_key="$(echo $quandl_api_key)" \
  -e tiingo_api_key="$(echo $tiingo_api_key)" \
  -e alpha_vantage_api_key="$(echo $alpha_vantage_api_key)" \
  -e healthchecks_io_api_key="$(echo $healthchecks_io_api_key)" \
  "$img" \
  "$job_cmd" $@
