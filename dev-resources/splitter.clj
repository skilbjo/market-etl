#!/usr/bin/env clj

(require '[clojure.pprint :as pprint])

(defn print-it [coll]
  (pprint/pprint coll)
  coll)

(def data [{:dataset "ALPHA-VANTAGE",
  :ticker
  ["BRK-B"
   "LON:FCH"
   "SFTBF"
   "TSM"
   "NTDOY"
   "NTDOF"
   "VEMAX"
   "VEURX"
   "VEXPX"
   "VGWAX"
   "VITAX"
   "VIMAX"
   "VMRAX"
   "VPACX"
   "VGSLX"
   "VTIAX"
   "VTSAX"
   "VWINX"
   "VWENX"
   "VWNDX"
   "VMMXX"
   "VWIGX"
   "VINEX"
   "VMMSX"
   "VWUAX"
   "VEXPX"
   "VIMSX"
   "VMRGX"
   "VGTSX"
   "VFH"
   "VEA"
   "VWO"
   "VHT"
   "VGT"
   "IAU"
   "GLD"
   "FB"
   "AMZN"
   "GOOG"
   "NVDA"
   "CY"
   "INTC"
   "TXN"
   "V"
   "SAP"
   "SQ"
   "PYPL"
   "BRK.B"
   "AAPL"
   "TWTR"
   "GS"
   "INTU"]}
 {:dataset "TIINGO",
  :ticker
  ["BRK-B"
   "FB"
   "AMZN"
   "GOOG"
   "NVDA"
   "CY"
   "INTC"
   "TXN"
   "V"
   "SAP"
   "SQ"
   "PYPL"
   "AAPL"
   "TWTR"
   "GS"
   "INTU"
   "LON:FCH"
   "SFTBF"
   "TSM"
   "NTDOY"
   "NTDOF"
   "VFH"
   "VEA"
   "VWO"
   "VHT"
   "VGT"
   "IAU"
   "GLD"
   "VEMAX"
   "VEURX"
   "VEXPX"
   "VGWAX"
   "VITAX"
   "VIMAX"
   "VMRAX"
   "VPACX"
   "VGSLX"
   "VTIAX"
   "VTSAX"
   "VWINX"
   "VWENX"
   "VWNDX"
   "VMMXX"
   "VWIGX"
   "VINEX"
   "VMMSX"
   "VWUAX"
   "VEXPX"
   "VIMSX"
   "VMRGX"
   "VGTSX"]}
 {:dataset "MSTAR",
  :ticker
  ["FB"
   "AMZN"
   "GOOG"
   "NVDA"
   "CY"
   "INTC"
   "TXN"
   "V"
   "SAP"
   "SQ"
   "PYPL"
   "BRK.B"
   "AAPL"
   "TWTR"
   "GS"
   "INTU"
   "LON:FCH"
   "SFTBF"
   "TSM"
   "NTDOY"
   "NTDOF"
   "VFH"
   "VEA"
   "VWO"
   "VHT"
   "VGT"
   "IAU"
   "GLD"
   "VEMAX"
   "VEURX"
   "VEXPX"
   "VGWAX"
   "VITAX"
   "VIMAX"
   "VMRAX"
   "VPACX"
   "VGSLX"
   "VTIAX"
   "VTSAX"
   "VWINX"
   "VWENX"
   "VWNDX"
   "VMMXX"
   "VWIGX"
   "VINEX"
   "VMMSX"
   "VWUAX"
   "VEXPX"
   "VIMSX"
   "VMRGX"
   "VGTSX"]}])

(defn split-it [m]
  (let [d (:dataset m)]
    (->> m
         :ticker
         (map #(assoc {} :dataset d :ticker %)))))

(->> data
     (map split-it)
     flatten
     doall
     print-it)
